package com.sv.orderapp.item_manager.model;
// Generated May 20, 2016 10:56:32 AM by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * MItem generated by hbm2java
 */
@Entity(name = "com.sv.orderapp.item_manager.model.MItem")
@Table(name = "m_item")
public class MItem implements java.io.Serializable {

    private Integer indexNo;
    private MDepartment MDepartment;
    private MMainCategory MMainCategory;
    private MSubCategory MSubCategory;
    private MTransactor MTransactor;
    private boolean active;
    private String code;
    private double costPrice;
    private String defaultUnit;
    private double lastSalePrice;
    private String name;
    private String printDescription;
    private double salePrice;
    private double wholeSalePrice;

    public MItem() {
    }

    public MItem(MTransactor MTransactor, boolean active, String code, double costPrice, String defaultUnit, double lastSalePrice, String name, String printDescription, double salePrice, double wholeSalePrice) {
        this.MTransactor = MTransactor;
        this.active = active;
        this.code = code;
        this.costPrice = costPrice;
        this.defaultUnit = defaultUnit;
        this.lastSalePrice = lastSalePrice;
        this.name = name;
        this.printDescription = printDescription;
        this.salePrice = salePrice;
        this.wholeSalePrice = wholeSalePrice;
    }

    public MItem(MDepartment MDepartment, MMainCategory MMainCategory, MSubCategory MSubCategory, MTransactor MTransactor, boolean active, String code, double costPrice, String defaultUnit, double lastSalePrice, String name, String printDescription, double salePrice, double wholeSalePrice) {
        this.MDepartment = MDepartment;
        this.MMainCategory = MMainCategory;
        this.MSubCategory = MSubCategory;
        this.MTransactor = MTransactor;
        this.active = active;
        this.code = code;
        this.costPrice = costPrice;
        this.defaultUnit = defaultUnit;
        this.lastSalePrice = lastSalePrice;
        this.name = name;
        this.printDescription = printDescription;
        this.salePrice = salePrice;
        this.wholeSalePrice = wholeSalePrice;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "index_no", unique = true, nullable = false)
    public Integer getIndexNo() {
        return this.indexNo;
    }

    public void setIndexNo(Integer indexNo) {
        this.indexNo = indexNo;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "department")
    public MDepartment getMDepartment() {
        return this.MDepartment;
    }

    public void setMDepartment(MDepartment MDepartment) {
        this.MDepartment = MDepartment;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "main_category")
    public MMainCategory getMMainCategory() {
        return this.MMainCategory;
    }

    public void setMMainCategory(MMainCategory MMainCategory) {
        this.MMainCategory = MMainCategory;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "sub_category")
    public MSubCategory getMSubCategory() {
        return this.MSubCategory;
    }

    public void setMSubCategory(MSubCategory MSubCategory) {
        this.MSubCategory = MSubCategory;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "supplier", nullable = false)
    public MTransactor getMTransactor() {
        return this.MTransactor;
    }

    public void setMTransactor(MTransactor MTransactor) {
        this.MTransactor = MTransactor;
    }

    @Column(name = "active", nullable = false)
    public boolean isActive() {
        return this.active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    @Column(name = "code", nullable = false, length = 10)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "cost_price", nullable = false, precision = 22, scale = 0)
    public double getCostPrice() {
        return this.costPrice;
    }

    public void setCostPrice(double costPrice) {
        this.costPrice = costPrice;
    }

    @Column(name = "default_unit", nullable = false, length = 50)
    public String getDefaultUnit() {
        return this.defaultUnit;
    }

    public void setDefaultUnit(String defaultUnit) {
        this.defaultUnit = defaultUnit;
    }

    @Column(name = "last_sale_price", nullable = false, precision = 22, scale = 0)
    public double getLastSalePrice() {
        return this.lastSalePrice;
    }

    public void setLastSalePrice(double lastSalePrice) {
        this.lastSalePrice = lastSalePrice;
    }

    @Column(name = "name", nullable = false, length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "print_description", nullable = false, length = 50)
    public String getPrintDescription() {
        return this.printDescription;
    }

    public void setPrintDescription(String printDescription) {
        this.printDescription = printDescription;
    }

    @Column(name = "sale_price", nullable = false, precision = 22, scale = 0)
    public double getSalePrice() {
        return this.salePrice;
    }

    public void setSalePrice(double salePrice) {
        this.salePrice = salePrice;
    }

    @Column(name = "whole_sale_price", nullable = false, precision = 22, scale = 0)
    public double getWholeSalePrice() {
        return this.wholeSalePrice;
    }

    public void setWholeSalePrice(double wholeSalePrice) {
        this.wholeSalePrice = wholeSalePrice;
    }

}
