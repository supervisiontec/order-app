package com.sv.orderapp.rest.model;
// Generated May 30, 2016 4:14:04 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TOrderSummary generated by hbm2java
 */
@Entity(name = "com.sv.orderapp.rest.model.TOrderSummary")
@Table(name="t_order_summary")
public class TOrderSummary  implements java.io.Serializable {


     private Integer indexNo;
     private int version;
     private MTransactor MTransactor;
     private MUser MUser;
     private Date orderDate;
     private double totalItemValue;
     private double itemDiscountValue;
     private double specialDiscountPercent;
     private double specialDiscountValue;
     private double netValue;
     private String paymentMethod;
     private Integer approvedByUser;
     private Date approvedDate;
     private String status;
     private Set<TOrderDetail> TOrderDetails = new HashSet<TOrderDetail>(0);

    public TOrderSummary() {
    }

	
    public TOrderSummary(MTransactor MTransactor, MUser MUser, Date orderDate, double totalItemValue, double itemDiscountValue, double specialDiscountPercent, double specialDiscountValue, double netValue, String paymentMethod, Date approvedDate, String status) {
        this.MTransactor = MTransactor;
        this.MUser = MUser;
        this.orderDate = orderDate;
        this.totalItemValue = totalItemValue;
        this.itemDiscountValue = itemDiscountValue;
        this.specialDiscountPercent = specialDiscountPercent;
        this.specialDiscountValue = specialDiscountValue;
        this.netValue = netValue;
        this.paymentMethod = paymentMethod;
        this.approvedDate = approvedDate;
        this.status = status;
    }
    public TOrderSummary(MTransactor MTransactor, MUser MUser, Date orderDate, double totalItemValue, double itemDiscountValue, double specialDiscountPercent, double specialDiscountValue, double netValue, String paymentMethod, Integer approvedByUser, Date approvedDate, String status, Set<TOrderDetail> TOrderDetails) {
       this.MTransactor = MTransactor;
       this.MUser = MUser;
       this.orderDate = orderDate;
       this.totalItemValue = totalItemValue;
       this.itemDiscountValue = itemDiscountValue;
       this.specialDiscountPercent = specialDiscountPercent;
       this.specialDiscountValue = specialDiscountValue;
       this.netValue = netValue;
       this.paymentMethod = paymentMethod;
       this.approvedByUser = approvedByUser;
       this.approvedDate = approvedDate;
       this.status = status;
       this.TOrderDetails = TOrderDetails;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="index_no", unique=true, nullable=false)
    public Integer getIndexNo() {
        return this.indexNo;
    }
    
    public void setIndexNo(Integer indexNo) {
        this.indexNo = indexNo;
    }

    @Column(name="version", nullable=false)
    public int getVersion() {
        return this.version;
    }
    
    public void setVersion(int version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="client", nullable=false)
    public MTransactor getMTransactor() {
        return this.MTransactor;
    }
    
    public void setMTransactor(MTransactor MTransactor) {
        this.MTransactor = MTransactor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="order_by_user", nullable=false)
    public MUser getMUser() {
        return this.MUser;
    }
    
    public void setMUser(MUser MUser) {
        this.MUser = MUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="order_date", nullable=false, length=10)
    public Date getOrderDate() {
        return this.orderDate;
    }
    
    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    
    @Column(name="total_item_value", nullable=false, precision=22, scale=0)
    public double getTotalItemValue() {
        return this.totalItemValue;
    }
    
    public void setTotalItemValue(double totalItemValue) {
        this.totalItemValue = totalItemValue;
    }

    
    @Column(name="item_discount_value", nullable=false, precision=22, scale=0)
    public double getItemDiscountValue() {
        return this.itemDiscountValue;
    }
    
    public void setItemDiscountValue(double itemDiscountValue) {
        this.itemDiscountValue = itemDiscountValue;
    }

    
    @Column(name="special_discount_percent", nullable=false, precision=22, scale=0)
    public double getSpecialDiscountPercent() {
        return this.specialDiscountPercent;
    }
    
    public void setSpecialDiscountPercent(double specialDiscountPercent) {
        this.specialDiscountPercent = specialDiscountPercent;
    }

    
    @Column(name="special_discount_value", nullable=false, precision=22, scale=0)
    public double getSpecialDiscountValue() {
        return this.specialDiscountValue;
    }
    
    public void setSpecialDiscountValue(double specialDiscountValue) {
        this.specialDiscountValue = specialDiscountValue;
    }

    
    @Column(name="net_value", nullable=false, precision=22, scale=0)
    public double getNetValue() {
        return this.netValue;
    }
    
    public void setNetValue(double netValue) {
        this.netValue = netValue;
    }

    
    @Column(name="payment_method", nullable=false, length=25)
    public String getPaymentMethod() {
        return this.paymentMethod;
    }
    
    public void setPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    
    @Column(name="approved_by_user")
    public Integer getApprovedByUser() {
        return this.approvedByUser;
    }
    
    public void setApprovedByUser(Integer approvedByUser) {
        this.approvedByUser = approvedByUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="approved_date", nullable=false, length=10)
    public Date getApprovedDate() {
        return this.approvedDate;
    }
    
    public void setApprovedDate(Date approvedDate) {
        this.approvedDate = approvedDate;
    }

    
    @Column(name="status", nullable=false, length=25)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="TOrderSummary")
    public Set<TOrderDetail> getTOrderDetails() {
        return this.TOrderDetails;
    }
    
    public void setTOrderDetails(Set<TOrderDetail> TOrderDetails) {
        this.TOrderDetails = TOrderDetails;
    }




}


