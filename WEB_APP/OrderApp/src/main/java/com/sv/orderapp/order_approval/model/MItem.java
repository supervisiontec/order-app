package com.sv.orderapp.order_approval.model;
// Generated May 30, 2016 4:52:23 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MItem generated by hbm2java
 */
@Entity(name = "com.sv.orderapp.order_approval.model.MItem")
@Table(name="m_item"
)
public class MItem  implements java.io.Serializable {


     private Integer indexNo;
     private int version;
     private MTransactor MTransactor;
     private String code;
     private String name;
     private String printDescription;
     private Integer department;
     private Integer mainCategory;
     private Integer subCategory;
     private String defaultUnit;
     private double costPrice;
     private double retailPrice;
     private double maxDiscountPercent;
     private boolean active;
     private Set<TOrderDetail> TOrderDetails = new HashSet<TOrderDetail>(0);

    public MItem() {
    }

	
    public MItem(MTransactor MTransactor, String code, String name, String printDescription, String defaultUnit, double costPrice, double retailPrice, double maxDiscountPercent, boolean active) {
        this.MTransactor = MTransactor;
        this.code = code;
        this.name = name;
        this.printDescription = printDescription;
        this.defaultUnit = defaultUnit;
        this.costPrice = costPrice;
        this.retailPrice = retailPrice;
        this.maxDiscountPercent = maxDiscountPercent;
        this.active = active;
    }
    public MItem(MTransactor MTransactor, String code, String name, String printDescription, Integer department, Integer mainCategory, Integer subCategory, String defaultUnit, double costPrice, double retailPrice, double maxDiscountPercent, boolean active, Set<TOrderDetail> TOrderDetails) {
       this.MTransactor = MTransactor;
       this.code = code;
       this.name = name;
       this.printDescription = printDescription;
       this.department = department;
       this.mainCategory = mainCategory;
       this.subCategory = subCategory;
       this.defaultUnit = defaultUnit;
       this.costPrice = costPrice;
       this.retailPrice = retailPrice;
       this.maxDiscountPercent = maxDiscountPercent;
       this.active = active;
       this.TOrderDetails = TOrderDetails;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="index_no", unique=true, nullable=false)
    public Integer getIndexNo() {
        return this.indexNo;
    }
    
    public void setIndexNo(Integer indexNo) {
        this.indexNo = indexNo;
    }

    @Column(name="version", nullable=false)
    public int getVersion() {
        return this.version;
    }
    
    public void setVersion(int version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="supplier", nullable=false)
    public MTransactor getMTransactor() {
        return this.MTransactor;
    }
    
    public void setMTransactor(MTransactor MTransactor) {
        this.MTransactor = MTransactor;
    }

    
    @Column(name="code", nullable=false, length=10)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

    
    @Column(name="name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="print_description", nullable=false, length=50)
    public String getPrintDescription() {
        return this.printDescription;
    }
    
    public void setPrintDescription(String printDescription) {
        this.printDescription = printDescription;
    }

    
    @Column(name="department")
    public Integer getDepartment() {
        return this.department;
    }
    
    public void setDepartment(Integer department) {
        this.department = department;
    }

    
    @Column(name="main_category")
    public Integer getMainCategory() {
        return this.mainCategory;
    }
    
    public void setMainCategory(Integer mainCategory) {
        this.mainCategory = mainCategory;
    }

    
    @Column(name="sub_category")
    public Integer getSubCategory() {
        return this.subCategory;
    }
    
    public void setSubCategory(Integer subCategory) {
        this.subCategory = subCategory;
    }

    
    @Column(name="default_unit", nullable=false, length=50)
    public String getDefaultUnit() {
        return this.defaultUnit;
    }
    
    public void setDefaultUnit(String defaultUnit) {
        this.defaultUnit = defaultUnit;
    }

    
    @Column(name="cost_price", nullable=false, precision=22, scale=0)
    public double getCostPrice() {
        return this.costPrice;
    }
    
    public void setCostPrice(double costPrice) {
        this.costPrice = costPrice;
    }

    
    @Column(name="retail_price", nullable=false, precision=22, scale=0)
    public double getRetailPrice() {
        return this.retailPrice;
    }
    
    public void setRetailPrice(double retailPrice) {
        this.retailPrice = retailPrice;
    }

    
    @Column(name="max_discount_percent", nullable=false, precision=22, scale=0)
    public double getMaxDiscountPercent() {
        return this.maxDiscountPercent;
    }
    
    public void setMaxDiscountPercent(double maxDiscountPercent) {
        this.maxDiscountPercent = maxDiscountPercent;
    }

    
    @Column(name="active", nullable=false)
    public boolean isActive() {
        return this.active;
    }
    
    public void setActive(boolean active) {
        this.active = active;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="MItem")
    public Set<TOrderDetail> getTOrderDetails() {
        return this.TOrderDetails;
    }
    
    public void setTOrderDetails(Set<TOrderDetail> TOrderDetails) {
        this.TOrderDetails = TOrderDetails;
    }




}


