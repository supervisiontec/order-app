package com.sv.orderapp.order_approval.model;
// Generated May 30, 2016 4:52:23 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MUser generated by hbm2java
 */
@Entity(name = "com.sv.orderapp.order_approval.model.MUser")
@Table(name="m_user"
)
public class MUser  implements java.io.Serializable {


     private Integer indexNo;
     private int version;
     private String name;
     private boolean itemControlPanel;
     private boolean customerControlPanel;
     private boolean supplierControlPanel;
     private boolean userControlPanel;
     private boolean customerApproval;
     private boolean orderApproval;
     private boolean reports;
     private boolean mobileApp;
     private boolean active;
     private String username;
     private String password;
     private Set<TOrderSummary> TOrderSummaries = new HashSet<TOrderSummary>(0);

    public MUser() {
    }

	
    public MUser(String name, boolean itemControlPanel, boolean customerControlPanel, boolean supplierControlPanel, boolean userControlPanel, boolean customerApproval, boolean orderApproval, boolean reports, boolean mobileApp, boolean active, String username, String password) {
        this.name = name;
        this.itemControlPanel = itemControlPanel;
        this.customerControlPanel = customerControlPanel;
        this.supplierControlPanel = supplierControlPanel;
        this.userControlPanel = userControlPanel;
        this.customerApproval = customerApproval;
        this.orderApproval = orderApproval;
        this.reports = reports;
        this.mobileApp = mobileApp;
        this.active = active;
        this.username = username;
        this.password = password;
    }
    public MUser(String name, boolean itemControlPanel, boolean customerControlPanel, boolean supplierControlPanel, boolean userControlPanel, boolean customerApproval, boolean orderApproval, boolean reports, boolean mobileApp, boolean active, String username, String password, Set<TOrderSummary> TOrderSummaries) {
       this.name = name;
       this.itemControlPanel = itemControlPanel;
       this.customerControlPanel = customerControlPanel;
       this.supplierControlPanel = supplierControlPanel;
       this.userControlPanel = userControlPanel;
       this.customerApproval = customerApproval;
       this.orderApproval = orderApproval;
       this.reports = reports;
       this.mobileApp = mobileApp;
       this.active = active;
       this.username = username;
       this.password = password;
       this.TOrderSummaries = TOrderSummaries;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="index_no", unique=true, nullable=false)
    public Integer getIndexNo() {
        return this.indexNo;
    }
    
    public void setIndexNo(Integer indexNo) {
        this.indexNo = indexNo;
    }

    @Column(name="version", nullable=false)
    public int getVersion() {
        return this.version;
    }
    
    public void setVersion(int version) {
        this.version = version;
    }

    
    @Column(name="name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="item_control_panel", nullable=false)
    public boolean isItemControlPanel() {
        return this.itemControlPanel;
    }
    
    public void setItemControlPanel(boolean itemControlPanel) {
        this.itemControlPanel = itemControlPanel;
    }

    
    @Column(name="customer_control_panel", nullable=false)
    public boolean isCustomerControlPanel() {
        return this.customerControlPanel;
    }
    
    public void setCustomerControlPanel(boolean customerControlPanel) {
        this.customerControlPanel = customerControlPanel;
    }

    
    @Column(name="supplier_control_panel", nullable=false)
    public boolean isSupplierControlPanel() {
        return this.supplierControlPanel;
    }
    
    public void setSupplierControlPanel(boolean supplierControlPanel) {
        this.supplierControlPanel = supplierControlPanel;
    }

    
    @Column(name="user_control_panel", nullable=false)
    public boolean isUserControlPanel() {
        return this.userControlPanel;
    }
    
    public void setUserControlPanel(boolean userControlPanel) {
        this.userControlPanel = userControlPanel;
    }

    
    @Column(name="customer_approval", nullable=false)
    public boolean isCustomerApproval() {
        return this.customerApproval;
    }
    
    public void setCustomerApproval(boolean customerApproval) {
        this.customerApproval = customerApproval;
    }

    
    @Column(name="order_approval", nullable=false)
    public boolean isOrderApproval() {
        return this.orderApproval;
    }
    
    public void setOrderApproval(boolean orderApproval) {
        this.orderApproval = orderApproval;
    }

    
    @Column(name="reports", nullable=false)
    public boolean isReports() {
        return this.reports;
    }
    
    public void setReports(boolean reports) {
        this.reports = reports;
    }

    
    @Column(name="mobileApp", nullable=false)
    public boolean isMobileApp() {
        return this.mobileApp;
    }
    
    public void setMobileApp(boolean mobileApp) {
        this.mobileApp = mobileApp;
    }

    
    @Column(name="active", nullable=false)
    public boolean isActive() {
        return this.active;
    }
    
    public void setActive(boolean active) {
        this.active = active;
    }

    
    @Column(name="username", nullable=false, length=25)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false, length=25)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="MUser")
    public Set<TOrderSummary> getTOrderSummaries() {
        return this.TOrderSummaries;
    }
    
    public void setTOrderSummaries(Set<TOrderSummary> TOrderSummaries) {
        this.TOrderSummaries = TOrderSummaries;
    }




}


