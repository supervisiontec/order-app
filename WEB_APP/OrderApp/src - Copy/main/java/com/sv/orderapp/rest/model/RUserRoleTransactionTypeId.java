package com.sv.orderapp.rest.model;
// Generated May 30, 2016 4:14:04 AM by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * RUserRoleTransactionTypeId generated by hbm2java
 */
@Embeddable
public class RUserRoleTransactionTypeId  implements java.io.Serializable {


     private String userRole;
     private String transactionType;

    public RUserRoleTransactionTypeId() {
    }

    public RUserRoleTransactionTypeId(String userRole, String transactionType) {
       this.userRole = userRole;
       this.transactionType = transactionType;
    }
   


    @Column(name="user_role", nullable=false, length=10)
    public String getUserRole() {
        return this.userRole;
    }
    
    public void setUserRole(String userRole) {
        this.userRole = userRole;
    }


    @Column(name="transaction_type", nullable=false, length=10)
    public String getTransactionType() {
        return this.transactionType;
    }
    
    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof RUserRoleTransactionTypeId) ) return false;
		 RUserRoleTransactionTypeId castOther = ( RUserRoleTransactionTypeId ) other; 
         
		 return ( (this.getUserRole()==castOther.getUserRole()) || ( this.getUserRole()!=null && castOther.getUserRole()!=null && this.getUserRole().equals(castOther.getUserRole()) ) )
 && ( (this.getTransactionType()==castOther.getTransactionType()) || ( this.getTransactionType()!=null && castOther.getTransactionType()!=null && this.getTransactionType().equals(castOther.getTransactionType()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getUserRole() == null ? 0 : this.getUserRole().hashCode() );
         result = 37 * result + ( getTransactionType() == null ? 0 : this.getTransactionType().hashCode() );
         return result;
   }   


}


